<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ls.stockforecast.dao.base.stockforecast.StockQuoteMapper">
  <resultMap id="BaseResultMap" type="com.ls.stockforecast.entity.model.base.stockforecast.StockQuote">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="scode" jdbcType="VARCHAR" property="scode" />
    <result column="mktcode" jdbcType="VARCHAR" property="mktcode" />
    <result column="date" jdbcType="INTEGER" property="date" />
    <result column="open" jdbcType="DOUBLE" property="open" />
    <result column="close" jdbcType="DOUBLE" property="close" />
    <result column="high" jdbcType="DOUBLE" property="high" />
    <result column="low" jdbcType="DOUBLE" property="low" />
    <result column="volume" jdbcType="DOUBLE" property="volume" />
    <result column="macd" jdbcType="DOUBLE" property="macd" />
    <result column="diff" jdbcType="DOUBLE" property="diff" />
    <result column="dea" jdbcType="DOUBLE" property="dea" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, scode, mktcode, date, open, close, high, low, volume, macd, diff, dea, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sf_stock_quote
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sf_stock_quote
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ls.stockforecast.entity.model.base.stockforecast.StockQuote">
    insert into sf_stock_quote (id, scode, mktcode,
      date, open, close, high, 
      low, volume, macd, diff, 
      dea, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{scode,jdbcType=VARCHAR}, #{mktcode,jdbcType=VARCHAR},
      #{date,jdbcType=INTEGER}, #{open,jdbcType=DOUBLE}, #{close,jdbcType=DOUBLE}, #{high,jdbcType=DOUBLE}, 
      #{low,jdbcType=DOUBLE}, #{volume,jdbcType=DOUBLE}, #{macd,jdbcType=DOUBLE}, #{diff,jdbcType=DOUBLE}, 
      #{dea,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ls.stockforecast.entity.model.base.stockforecast.StockQuote">
    insert into sf_stock_quote
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="scode != null">
        scode,
      </if>
      <if test="mktcode != null">
        mktcode,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="open != null">
        open,
      </if>
      <if test="close != null">
        close,
      </if>
      <if test="high != null">
        high,
      </if>
      <if test="low != null">
        low,
      </if>
      <if test="volume != null">
        volume,
      </if>
      <if test="macd != null">
        macd,
      </if>
      <if test="diff != null">
        diff,
      </if>
      <if test="dea != null">
        dea,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="scode != null">
        #{scode,jdbcType=VARCHAR},
      </if>
      <if test="mktcode != null">
        #{mktcode,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=INTEGER},
      </if>
      <if test="open != null">
        #{open,jdbcType=DOUBLE},
      </if>
      <if test="close != null">
        #{close,jdbcType=DOUBLE},
      </if>
      <if test="high != null">
        #{high,jdbcType=DOUBLE},
      </if>
      <if test="low != null">
        #{low,jdbcType=DOUBLE},
      </if>
      <if test="volume != null">
        #{volume,jdbcType=DOUBLE},
      </if>
      <if test="macd != null">
        #{macd,jdbcType=DOUBLE},
      </if>
      <if test="diff != null">
        #{diff,jdbcType=DOUBLE},
      </if>
      <if test="dea != null">
        #{dea,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ls.stockforecast.entity.model.base.stockforecast.StockQuote">
    update sf_stock_quote
    <set>
      <if test="scode != null">
        scode = #{scode,jdbcType=VARCHAR},
      </if>
      <if test="mktcode != null">
        mktcode = #{mktcode,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=INTEGER},
      </if>
      <if test="open != null">
        open = #{open,jdbcType=DOUBLE},
      </if>
      <if test="close != null">
        close = #{close,jdbcType=DOUBLE},
      </if>
      <if test="high != null">
        high = #{high,jdbcType=DOUBLE},
      </if>
      <if test="low != null">
        low = #{low,jdbcType=DOUBLE},
      </if>
      <if test="volume != null">
        volume = #{volume,jdbcType=DOUBLE},
      </if>
      <if test="macd != null">
        macd = #{macd,jdbcType=DOUBLE},
      </if>
      <if test="diff != null">
        diff = #{diff,jdbcType=DOUBLE},
      </if>
      <if test="dea != null">
        dea = #{dea,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ls.stockforecast.entity.model.base.stockforecast.StockQuote">
    update sf_stock_quote
    set scode = #{scode,jdbcType=VARCHAR},
      mktcode = #{mktcode,jdbcType=VARCHAR},
      date = #{date,jdbcType=INTEGER},
      open = #{open,jdbcType=DOUBLE},
      close = #{close,jdbcType=DOUBLE},
      high = #{high,jdbcType=DOUBLE},
      low = #{low,jdbcType=DOUBLE},
      volume = #{volume,jdbcType=DOUBLE},
      macd = #{macd,jdbcType=DOUBLE},
      diff = #{diff,jdbcType=DOUBLE},
      dea = #{dea,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteByDate" parameterType="java.lang.Integer">
    delete from sf_stock_quote where date = #{date,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByScodeAndYear">
    delete from sf_stock_quote where scode = #{scode,jdbcType=VARCHAR} and mktcode = #{mktcode,jdbcType=VARCHAR} and date like concat(#{year},'%')
  </delete>
</mapper>